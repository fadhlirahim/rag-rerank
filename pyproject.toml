[project]
name = "rag-rerank-poc"
version = "0.1.0"
description = "RAG system using OpenAI embeddings and Pinecone for vector storage"
readme = "README.md"
requires-python = ">=3.11.12"
dependencies = [
    "fastapi>=0.104.0,<0.105.0",
    "uvicorn>=0.23.0,<0.24.0",
    "pydantic>=2.4.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "openai>=1.3.0,<2.0.0",
    "pinecone>=6.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "python-multipart>=0.0.6,<0.1.0",
    "httpx>=0.25.0,<0.26.0",
    "gunicorn>=21.2.0,<22.0.0",
    "sentence-transformers>=2.5.1",
    "lancedb==0.23.0",
]

[dependency-groups]
dev = [
    "black>=23.9.1,<24.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.5.1,<2.0.0",
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.1,<0.22.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "ruff>=0.2.0",
    "types-requests>=2.31.0.2,<3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py311"

exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist"
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["."]
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
strict = true
pretty = true
warn_unreachable = true
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true